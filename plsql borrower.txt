DECLARE
  v_roll_no     NUMBER;
  v_name_of_book VARCHAR2(50);
  v_date_of_issue DATE;
  v_days_late    NUMBER;
  v_fine_amt     NUMBER;
  v_status       VARCHAR2(1);
  
  -- Define custom exception
  overdue_exception EXCEPTION;
  
BEGIN
  -- Accept user input
  v_roll_no := &Enter_Roll_No;
  v_name_of_book := '&Enter_Name_of_Book';

  -- Fetch details from Borrower table
  SELECT Date_of_Issue, Status
  INTO v_date_of_issue, v_status
  FROM Borrower
  WHERE Roll_no = v_roll_no AND Name_of_Book = v_name_of_book;

  -- Calculate days overdue
  v_days_late := TRUNC(SYSDATE - v_date_of_issue);

  -- Check conditions and calculate fine amount
  IF v_days_late BETWEEN 15 AND 30 THEN
    v_fine_amt := v_days_late * 5;
  ELSIF v_days_late > 30 THEN
    v_fine_amt := v_days_late * 50;
  ELSE
    v_fine_amt := 0;
  END IF;

  -- Update status in Borrower table
  UPDATE Borrower
  SET Status = 'R'
  WHERE Roll_no = v_roll_no AND Name_of_Book = v_name_of_book;

  -- Insert fine details into Fine table if fine amount is greater than 0
  IF v_fine_amt > 0 THEN
    INSERT INTO Fine (Roll_no, Date, Amt)
    VALUES (v_roll_no, SYSDATE, v_fine_amt);
  END IF;

  -- Commit the transaction
  COMMIT;

EXCEPTION
  WHEN NO_DATA_FOUND THEN
    DBMS_OUTPUT.PUT_LINE('Error: Borrower details not found.');
  WHEN overdue_exception THEN
    DBMS_OUTPUT.PUT_LINE('Error: Book is overdue.');
  WHEN OTHERS THEN
    DBMS_OUTPUT.PUT_LINE('An error occurred: ' || SQLERRM);
    ROLLBACK;
END;
/
